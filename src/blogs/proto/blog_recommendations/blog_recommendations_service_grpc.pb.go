// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v5.26.1
// source: blog_recommendations_service.proto

package blog_recommendations

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	BlogRecommendationService_CreateBlogRecommendation_FullMethodName          = "/BlogRecommendationService/CreateBlogRecommendation"
	BlogRecommendationService_GetAllBlogRecommendations_FullMethodName         = "/BlogRecommendationService/GetAllBlogRecommendations"
	BlogRecommendationService_GetBlogRecommendationById_FullMethodName         = "/BlogRecommendationService/GetBlogRecommendationById"
	BlogRecommendationService_GetBlogRecommendationByReceiverId_FullMethodName = "/BlogRecommendationService/GetBlogRecommendationByReceiverId"
)

// BlogRecommendationServiceClient is the client API for BlogRecommendationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BlogRecommendationServiceClient interface {
	CreateBlogRecommendation(ctx context.Context, in *CreateBlogRecommendationRequest, opts ...grpc.CallOption) (*CreateBlogRecommendationResponse, error)
	GetAllBlogRecommendations(ctx context.Context, in *GetAllBlogRecommendationsRequest, opts ...grpc.CallOption) (*GetAllBlogRecommendationsResponse, error)
	GetBlogRecommendationById(ctx context.Context, in *GetBlogRecommendationByIdRequest, opts ...grpc.CallOption) (*GetBlogRecommendationByIdResponse, error)
	GetBlogRecommendationByReceiverId(ctx context.Context, in *GetBlogRecommendationByReceiverIdRequest, opts ...grpc.CallOption) (*GetBlogRecommendationByReceiverIdResponse, error)
}

type blogRecommendationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBlogRecommendationServiceClient(cc grpc.ClientConnInterface) BlogRecommendationServiceClient {
	return &blogRecommendationServiceClient{cc}
}

func (c *blogRecommendationServiceClient) CreateBlogRecommendation(ctx context.Context, in *CreateBlogRecommendationRequest, opts ...grpc.CallOption) (*CreateBlogRecommendationResponse, error) {
	out := new(CreateBlogRecommendationResponse)
	err := c.cc.Invoke(ctx, BlogRecommendationService_CreateBlogRecommendation_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogRecommendationServiceClient) GetAllBlogRecommendations(ctx context.Context, in *GetAllBlogRecommendationsRequest, opts ...grpc.CallOption) (*GetAllBlogRecommendationsResponse, error) {
	out := new(GetAllBlogRecommendationsResponse)
	err := c.cc.Invoke(ctx, BlogRecommendationService_GetAllBlogRecommendations_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogRecommendationServiceClient) GetBlogRecommendationById(ctx context.Context, in *GetBlogRecommendationByIdRequest, opts ...grpc.CallOption) (*GetBlogRecommendationByIdResponse, error) {
	out := new(GetBlogRecommendationByIdResponse)
	err := c.cc.Invoke(ctx, BlogRecommendationService_GetBlogRecommendationById_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogRecommendationServiceClient) GetBlogRecommendationByReceiverId(ctx context.Context, in *GetBlogRecommendationByReceiverIdRequest, opts ...grpc.CallOption) (*GetBlogRecommendationByReceiverIdResponse, error) {
	out := new(GetBlogRecommendationByReceiverIdResponse)
	err := c.cc.Invoke(ctx, BlogRecommendationService_GetBlogRecommendationByReceiverId_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BlogRecommendationServiceServer is the server API for BlogRecommendationService service.
// All implementations must embed UnimplementedBlogRecommendationServiceServer
// for forward compatibility
type BlogRecommendationServiceServer interface {
	CreateBlogRecommendation(context.Context, *CreateBlogRecommendationRequest) (*CreateBlogRecommendationResponse, error)
	GetAllBlogRecommendations(context.Context, *GetAllBlogRecommendationsRequest) (*GetAllBlogRecommendationsResponse, error)
	GetBlogRecommendationById(context.Context, *GetBlogRecommendationByIdRequest) (*GetBlogRecommendationByIdResponse, error)
	GetBlogRecommendationByReceiverId(context.Context, *GetBlogRecommendationByReceiverIdRequest) (*GetBlogRecommendationByReceiverIdResponse, error)
	mustEmbedUnimplementedBlogRecommendationServiceServer()
}

// UnimplementedBlogRecommendationServiceServer must be embedded to have forward compatible implementations.
type UnimplementedBlogRecommendationServiceServer struct {
}

func (UnimplementedBlogRecommendationServiceServer) CreateBlogRecommendation(context.Context, *CreateBlogRecommendationRequest) (*CreateBlogRecommendationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBlogRecommendation not implemented")
}
func (UnimplementedBlogRecommendationServiceServer) GetAllBlogRecommendations(context.Context, *GetAllBlogRecommendationsRequest) (*GetAllBlogRecommendationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllBlogRecommendations not implemented")
}
func (UnimplementedBlogRecommendationServiceServer) GetBlogRecommendationById(context.Context, *GetBlogRecommendationByIdRequest) (*GetBlogRecommendationByIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlogRecommendationById not implemented")
}
func (UnimplementedBlogRecommendationServiceServer) GetBlogRecommendationByReceiverId(context.Context, *GetBlogRecommendationByReceiverIdRequest) (*GetBlogRecommendationByReceiverIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlogRecommendationByReceiverId not implemented")
}
func (UnimplementedBlogRecommendationServiceServer) mustEmbedUnimplementedBlogRecommendationServiceServer() {
}

// UnsafeBlogRecommendationServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BlogRecommendationServiceServer will
// result in compilation errors.
type UnsafeBlogRecommendationServiceServer interface {
	mustEmbedUnimplementedBlogRecommendationServiceServer()
}

func RegisterBlogRecommendationServiceServer(s grpc.ServiceRegistrar, srv BlogRecommendationServiceServer) {
	s.RegisterService(&BlogRecommendationService_ServiceDesc, srv)
}

func _BlogRecommendationService_CreateBlogRecommendation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBlogRecommendationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogRecommendationServiceServer).CreateBlogRecommendation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BlogRecommendationService_CreateBlogRecommendation_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogRecommendationServiceServer).CreateBlogRecommendation(ctx, req.(*CreateBlogRecommendationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogRecommendationService_GetAllBlogRecommendations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllBlogRecommendationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogRecommendationServiceServer).GetAllBlogRecommendations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BlogRecommendationService_GetAllBlogRecommendations_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogRecommendationServiceServer).GetAllBlogRecommendations(ctx, req.(*GetAllBlogRecommendationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogRecommendationService_GetBlogRecommendationById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlogRecommendationByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogRecommendationServiceServer).GetBlogRecommendationById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BlogRecommendationService_GetBlogRecommendationById_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogRecommendationServiceServer).GetBlogRecommendationById(ctx, req.(*GetBlogRecommendationByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogRecommendationService_GetBlogRecommendationByReceiverId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlogRecommendationByReceiverIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogRecommendationServiceServer).GetBlogRecommendationByReceiverId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BlogRecommendationService_GetBlogRecommendationByReceiverId_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogRecommendationServiceServer).GetBlogRecommendationByReceiverId(ctx, req.(*GetBlogRecommendationByReceiverIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// BlogRecommendationService_ServiceDesc is the grpc.ServiceDesc for BlogRecommendationService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BlogRecommendationService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "BlogRecommendationService",
	HandlerType: (*BlogRecommendationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBlogRecommendation",
			Handler:    _BlogRecommendationService_CreateBlogRecommendation_Handler,
		},
		{
			MethodName: "GetAllBlogRecommendations",
			Handler:    _BlogRecommendationService_GetAllBlogRecommendations_Handler,
		},
		{
			MethodName: "GetBlogRecommendationById",
			Handler:    _BlogRecommendationService_GetBlogRecommendationById_Handler,
		},
		{
			MethodName: "GetBlogRecommendationByReceiverId",
			Handler:    _BlogRecommendationService_GetBlogRecommendationByReceiverId_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "blog_recommendations_service.proto",
}
